*,
*::before,
*::after {
	box-sizing: border-box;
}

ul[class],
ol[class] {
	padding: 0;
	list-style: none;
}

body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
	margin: 0;
}

a:not([class]) {
	text-decoration-skip-ink: auto;
}

img {
	max-width: 100%;
	display: block;
}

article>*+* {
	margin-top: 1em;
}

input,
button,
textarea,
select {
	font: inherit;
}

@media (prefers-reduced-motion: reduce) {
	* {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

::-webkit-scrollbar-track {
	-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
	background-color: #F5F5F5;
}

::-webkit-scrollbar {
	width: 6px;
	background-color: #F5F5F5;
}

::-webkit-scrollbar-thumb {
	background-color: #000000;
}

.bg-light-brown {
	background-color: #f0a30a;
}

.bg-light-purple {
	background-color: #d80073;
	color: #ffffff;
}

.bg-bisque {
	background-color: bisque;
}

body {
	margin: 0;
	padding: 0;
	font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
	line-height: 1.5;
}

.top-section {
	width: 95%;
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	grid-gap: 20px;
	justify-items: center;
	align-items: center;
	margin: 30px auto;
}

.container {
	display: grid;
	grid-gap: 20px;
	width: 95%;
	margin: 0 auto;
}

.block {
	height: 300px;
	background-color: #d5e8d4;
	border: 0.3rem solid #000000;
}

.block__caption {
	display: grid;
	grid-template-columns: auto 150px;
}

.block__caption-text {
	height: 40px;
	text-align: center;
	border-bottom: 0.3rem solid #000000;
	border-left: 0.3rem solid #000000;
	font-size: 25px;
	font-weight: bold;
	grid-column: 2;
}

.block__content {
	margin: 20px;
	overflow-y: auto;
	height: calc(100% - 80px);
	font-size: 20px;
}

@media (min-width: 993px) {
	.container {
		grid-template-columns: repeat(3, 1fr)
	}

	.container> :nth-child(3n-1):last-child {
		grid-column: span 2;
	}

	.container> :nth-child(3n-2):last-child {
		grid-column: span 3;
	}
}

@media (min-width: 769px) and (max-width: 992px) {
	.container {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.container> :nth-child(2n-1):last-of-type {
		grid-column: span 2;
	}
}

@media (max-width: 768px) {
	.container {
		grid-template-columns: repeat(1, 1fr);
	}
}